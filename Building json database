# import necessary libraries
import os
import numpy as np
import json
import glob
import spacy
import pandas as pd
import pdfplumber
import PyPDF2
import re
import tkinter as tk
from tkinter import filedialog
from tkinter import Listbox, Tk, MULTIPLE, Button, END

# the path to your JSON database
filename = "/Users/kylenabors/Documents/GitHub/MS-Thesis/Training Data/Fed Data/fed_database.json"

# function to display the main menu
def Choices():
    print("Fed Documents")
    print("Data Managment Systmem")
    print("(1) View Data")
    print("(2) Edit Data")
    print("(3) Remove Duplicates")
    print("(4) Delete Entry")
    print("(5) Exit")

# function to display all data in the database
def view_data():
    with open(filename, "r") as f:
        data = json.load(f)
    for entry in data:
        name = entry["name"]
        date = entry["date"]
        type = entry["type"]
        print(f"Name of Document: {name}")
        print(f"Date of Document: {date}")
        print(f"Type of Document: {type}")
        if "path" in entry:
            path = entry["path"]
            print(f"File Path: {path}")
        else:
            print("File Path: Not available")
        print("\n\n")

# function to add data to the database
def add_data():
    root = tk.Tk()
    root.withdraw()
    directory_path = filedialog.askdirectory()  # let user choose the directory
    file_types = ['Speeches', 'Press Releases']  # types of files to add
    for file_type in file_types:
        files = glob.glob(f"{directory_path}/{file_type}/*.pdf")  # get all files of this type
        for file in files:
            item_data = {}  # data for this item
            item_data["name"] = file.split("/")[-1]  # name is the file name
            item_data["date"] = "".join(re.findall(r'\d+', item_data["name"]))  # date is numbers in the file name
            item_data["type"] = file_type  # type is the type of file
            item_data["path"] = file  # path is the full file path
            with open (filename, "r") as f:
                temp = json.load(f)
                temp.append(item_data)  # add the new item to the database
                with open(filename, "w") as f:
                    json.dump(temp, f, indent=4)  # save the updated database

def delete_entry():
    # Read the data
    with open(filename, "r") as f:
        data = json.load(f)

    # Create a new tkinter window
    root = Tk()

    # Create a listbox and put it in the window
    lb = Listbox(root, selectmode=MULTIPLE)
    lb.pack()

    # Add all names to the listbox
    for i, entry in enumerate(data):
        lb.insert(i, entry["name"])

    # Create a button and set its command to delete_selected
    btn = Button(root, text="Delete selected", command=lambda: delete_selected(lb, data))
    btn.pack()

    # Run the tkinter main loop
    root.mainloop()

def delete_selected(listbox, data):
    # Get selected indices
    selected_indices = listbox.curselection()

    # Get selected names
    selected_names = [listbox.get(i) for i in selected_indices]

    # Remove selected entries from the data
    data = [entry for entry in data if entry["name"] not in selected_names]

    # Save the updated data
    with open(filename, "w") as f:
        json.dump(data, f, indent=4)

    # Remove selected entries from the listbox
    for i in selected_indices[::-1]:
        listbox.delete(i)


# function to remove duplicates from the database
def remove_duplicates():
    with open(filename, "r") as f:
        data = json.load(f)

    data_no_duplicates = []  # the updated data
    seen_names = set()  # names we've seen before
    for entry in data:
        if entry["name"] not in seen_names:  # if we haven't seen this name before
            data_no_duplicates.append(entry)  # keep this entry
            seen_names.add(entry["name"])  # and remember this name

    with open(filename, "w") as f:
        json.dump(data_no_duplicates, f, indent=4)  # save the updated database

# main loop
while True:
    Choices()  # show the main menu
    choice = input("\nEnter Number: ")  # get user's choice
    if choice == "1":
        view_data()  # view data
    elif choice == "2":
        add_data()  # add data
    elif choice == "3":
        remove_duplicates()  # remove duplicates
    elif choice == "4":
        delete_entry()  # delete an entry
    elif choice == "5":
        print("Exit")  # exit
        break
    else:
        print("Invalid Input")  # user entered an invalid choice
